version: '3.7'

services:

  postgres:
    image: postgres:13
    container_name: imdb_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: imdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_net

  # Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: imdb_zookeeper
    ports:
      - "2181:2181"
    networks:
      - app_net

  # Kafka
  kafka:
    image: wurstmeister/kafka
    container_name: imdb_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper
    networks:
      - app_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - app_net

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    container_name: imdb_elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app_net

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.3
    container_name: imdb_kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app_net

  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: imdb_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - pushgateway
    networks:
      - app_net

  pushgateway:
    image: prom/pushgateway
    ports:
      - "9091:9091"
    networks:
      - app_net

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: imdb_grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app_net

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: elasticsearch_exporter
    environment:
      - ES_URI=http://elasticsearch:9200
    ports:
      - "9114:9114"
    depends_on:
      - elasticsearch
    networks:
      - app_net

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.6.3
    container_name: airflow_init
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/imdb
      AIRFLOW__WEBSERVER__SECRET_KEY: super_secret_key_123
    command: bash -c "airflow db init"
    networks:
      - app_net

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.6.3
    container_name: airflow_web
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/imdb
      AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: UTC
      AIRFLOW__WEBSERVER__SECRET_KEY: super_secret_key_123
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./init_admin.sh:/opt/airflow/init_admin.sh
      - airflow_logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jars:/opt/spark/jars
    user: root
    env_file:
      - .env
    command: >
      bash -c "airflow db upgrade &&
               bash /opt/airflow/init_admin.sh &&
               airflow webserver"
    networks:
      - app_net

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.6.3
    container_name: airflow_scheduler
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/imdb
      AIRFLOW__WEBSERVER__SECRET_KEY: super_secret_key_123
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - airflow_logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jars:/opt/spark/jars
    user: root
    env_file:
      - .env
    command: bash -c "airflow scheduler"
    networks:
      - app_net

  streaming_job:
    build:
      context: .
      dockerfile: Dockerfile.streaming
    image: imdb_pipeline-streaming_job:latest
    depends_on:
      - kafka
      - elasticsearch
    volumes:
      - .:/app
    command: >
      bash -c "spark-submit --master local[2] /app/spark_streaming_job.py"
    networks:
      - app_net

volumes:
  pgdata:
  airflow_logs:
  esdata:
  grafana_data:

networks:
  app_net:
